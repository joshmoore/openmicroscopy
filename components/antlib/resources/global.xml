<?xml version="1.0" encoding="utf-8"?>
<project name="global" default="help" basedir=".">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# $Id$
# 
# Copyright 2006 University of Dundee. All rights reserved.
# Use is subject to license terms supplied in LICENSE.txt
# 
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josh Moore <josh.moore@gmx.de>
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
  DOCUMENTATION:
  ==============================================================================
  Central ant script. It imports all other helper scripts and property
  files in the proper order, and in general can be imported from
  anywhere. 

  global.xml will determine its own location and bootstrap all other
  definitions from there.

-->

        <tstamp>
	  <format property="now" pattern="yyyyMMddHHmmss"/>
	</tstamp>

	<!-- Where to find things. It is assume that to have imported this 
	file any build script will have had to define the import.dir variable-->
	<import file="${import.dir}/directories.xml"/>

	<!-- Define properties :
		The user's environment (env) overrides all other
		variables, then comes the user defined
		local.properties, then the controlled *.properties
		files.
	-->

	<property environment="env" />
	<property file="${root.dir}/etc/local.properties" />
	<property file="${root.dir}/etc/local.properties.example" />
	<property file="${root.dir}/etc/omero.properties" />
	<property file="${root.dir}/etc/hibernate.properties" />
	<property name="test.with.fail" value="true"/>
        <property name="classpath.file" value="classpath.xml"/>
	
	<!-- Imports -->
	<import file="${import.dir}/patterns.xml"/>
	<import file="${import.dir}/macros.xml"/>
	
	<!-- Message bundles, so all properties are defined -->
	<property file="${import.dir}/messages.properties" />

    <!-- Post-import properties -->
    <property name="sql.dir" value="${omero.home}/sql/${omero.db.profile}"/>

    <!-- = = = = = = = = = = = = = = = = =
          help 
         = = = = = = = = = = = = = = = = = -->
	<target name="help">
		<echo>
			This build file is intended for import only.
		</echo>
	</target>

	<target name="variables-define">
		<condition property="test.with.fail">
			<equals arg1="${multi.test.with.fail}" arg2="true"/>
		</condition>
		<condition property="test.skip">
			<equals arg1="${multi.test.skip}" arg2="true"/>
		</condition>
		<condition property="generate.skip">
			<equals arg1="${multi.generate.skip}" arg2="true"/>
		</condition>
		<condition property="checks.skip">
			<equals arg1="${multi.checks.skip}" arg2="true"/>
		</condition>
	</target>

	<target name="quick">
		<property name="config.skip" value="true"/>
		<property name="test.skip" value="true"/>
		<property name="generate.skip" value="true"/>
	</target>

	<target name="nochecks">
		<property name="checks.skip" value="true"/>
	</target>

	<target name="fail-on-error">
		<property name="test.with.fail" value="true"/>
	</target>

	<target name="load-groovy">
		<available property="groovy-exists" classname="org.codehaus.groovy.ant.Groovy" classpathref="omero.classpath" />
		<fail unless="groovy-exists" message="Groovy ${msg.macro.missing_fail}"/>

		<!-- http://groovy.codehaus.org/Ant+Task+Troubleshooting -->
		<taskdef name="rootLoaderRef" classname="org.codehaus.groovy.ant.RootLoaderRef" classpathref="omero.classpath"/>
		<rootLoaderRef ref="groovy.classpath">
  			<classpath refid="omero.classpath"/>
		</rootLoaderRef>
		<taskdef classname="org.codehaus.groovy.ant.Groovy" loaderref="groovy.classpath" name="groovy"/>
	</target>
	
	<target name="setup-db" depends="prepare">
		<java classname="ome.security.PasswordUtil" outputproperty="ROOTPASS" classpathref="omero.classpath">
			<arg value="${omero.rootpass}"/>
		</java>
		<copy file="${sql.dir}/${omero.dbversion}__${omero.dbpatch}__schema.sql" tofile="${target.dir}/ddl.sql"  overwrite="true"/>
		<copy file="${sql.dir}/${omero.dbversion}__${omero.dbpatch}__data.sql" tofile="${target.dir}/data.sql"  overwrite="true"/>
		<replace file="${target.dir}/data.sql" token="@ROOTPASS@" value="${ROOTPASS}"/>
		<replace file="${target.dir}/data.sql" token="@DBPATCH@" value="${omero.dbpatch}"/>
		<replace file="${target.dir}/data.sql" token="@DBVERSION@" value="${omero.dbversion}"/>
		<sql_run>
			<transaction src="${target.dir}/ddl.sql"/>
			<transaction src="${target.dir}/data.sql"/>
		</sql_run>
	</target>
	
</project>
