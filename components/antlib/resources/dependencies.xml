<?xml version="1.0" encoding="utf-8"?>
<project name="dependencies" xmlns:ivy="antlib:fr.jayasoft.ivy.ant">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# $Id$
# 
# Copyright 2007 Glencoe Software, Inc. All rights reserved.
# Use is subject to license terms supplied in LICENSE.txt
# 
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josh Moore, josh at glencoesoftware.com
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->

  <description>
  
    
    Use namespace "deps-" for all targets, "deps." for all variables.
  </description>
  
  <!-- For these definitions to work properly, directories.xml must be imported-->
  <property name="deps.lib.dir" value="${target.dir}/libs"/>
  <property name="ivy.local.default.root" value="${omero.home}/lib/repository"/>
  <!-- These are default values. If you'd like to override, due so before import-->
  <property name="ivy.buildlist.ivyfilepath" value="ivy.xml"/>
  <property name="ivy.dep.file"             value="${basedir}/ivy.xml"/>

  <!--
      Prepare the ivy runtime. This requires the ivy library under lib/repository/tools.
    -->
  <path id="tools.classpath">
    <fileset dir="${omero.home}/lib/tools" includes="*.jar"/>
  </path>
  <taskdef resource="fr/jayasoft/ivy/ant/antlib.xml"
	   uri="antlib:fr.jayasoft.ivy.ant" classpathref="tools.classpath"/>
  

  <!-- 
       These classpaths are used by all components, and amount to only the deps.lib.dir
       directory within each component. That directory is configured using deps-retrieve,
       which "retrieves" the directories from the local directory. After that initial 
       configuration, the build should be ivy-agnostic as far as possible.
    -->
  <path id="omero.compile.classpath">
    <fileset dir="${deps.lib.dir}" />
  </path>
  
  <path id="omero.classpath">
    <path location="${classes.dir}" />
    <path location="${resrc.dir}" />
    <path location="${resrc.dest}" />
    <path refid="omero.compile.classpath" />
  </path>
  
  <path id="omero.test.classpath">
    <path refid="omero.classpath" />
  </path>

  <!--
      This tasks configures Ivy by reading the configuration files under the top-level
      etc directory. If this target is NOT called for some reason, Ivy will fail with
      strange errors.
    -->
  <target name="deps-configure"
	  description="Parses the Ivy configuration. Required by all Ivy activities.">
    <ivy:configure file="${etc.dir}/ivyconf.xml" />
  </target>
  
  <target name="deps-buildlist" 
	  depends="deps-configure"
	  description="Reads all build.xml and ivy.xml files to determine depedencies.">
    <property name="deps.buildlist.dir" value="${omero.home}/components"/>
    <ivy:buildlist reference="deps.build.path">
      <fileset dir="${deps.buildlist.dir}" includes="*/build.xml" excludes="**/bioformats-omero/**,**/policy/**,**/tools/**"/>
    </ivy:buildlist>
  </target>

  <target name="deps-retrieve" 
	  depends="deps-configure"
	  description="Copy dependencies into the component-local deps.lib.dir."
	  unless="deps.lib.dir.needed">
    <mkdir dir="${deps.lib.dir}"/>
    <ivy:retrieve pattern="${deps.lib.dir}/[artifact].[ext]"/>
  </target>

  <target name="deps-info"
	  description="Parses ivy.xml file, setting several ant variables.">
    <ivy:info file="${basedir}/ivy.xml"/>
  </target>
  
  <target name="deps-resolve"
	  depends="deps-configure"
	  description="Transitively resolves all dependencies">
    <ivy:resolve file="${ivy.dep.file}" type="jar"/>
  </target>
  
  <target name="deps-report" 
    depends="deps-retrieve" 
    description="--&gt; generates a report of dependencies">
    <ivy:report todir="${target.dir}"/>
  </target>

  <target name="deps-publish-local" 
      depends="deps-resolve" 
      description="Publish this project in the local ivy repository.">
    <delete file="${target.dir}/${ivy.module}.xml"/> <!-- delete last produced ivy file to be sure a new one will be generated -->
    <ivy:publish artifactspattern="${target.dir}/[module].[ext]" resolver="omero-resolver" pubrevision="${omero.version}" pubdate="${now}" status="integration"/>
  </target>

  <target name="deps-publish-omero" 
      depends="deps-configure" 
      description="--&gt; publish this project in the omero ivy repository">
    <delete file="${target.dir}/ivy.xml"/> <!-- delete last produced ivy file to be sure a new one will be generated -->
    <ivy:publish artifactspattern="${target.dir}/[artifact].[ext]" resolver="omero-resolver" pubrevision="${revision}" pubdate="${now}" status="integration"/>
    <echo message="project ${ant.project.name} published locally with version ${revision}"/>
  </target>

  <target name="deps-clean-local" 
      depends="deps-configure" 
      description="cleans the local repository for the current module">
    <delete dir="${ivy.local.default.root}/${ant.project.name}"/>
  </target>

  <target name="deps-clean-lib" 
      description="--&gt; clean the project libraries directory (dependencies)">
    <delete includeemptydirs="true" dir="${deps.lib.dir}"/>
  </target>

</project>
