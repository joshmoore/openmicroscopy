<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# $Id$
#
# Copyright 2006 University of Dundee. All rights reserved.
# Use is subject to license terms supplied in LICENSE.txt
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->

<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josh Moore <josh.moore@gmx.de>
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->

<beans default-lazy-init="true">

  <description>
    Configuration for Hibernate data access. The beans in this configuration file
    should NOT be generally accessed. In general, this entire file should be
    considered to have a "private" scope.
  </description>

  <bean id="extendedMetadata" class="ome.tools.hibernate.ExtendedMetadata$Impl">
    <description>
    Simple cache for metadata needed throughout the server. Uses the Hibernate
    metamodel to fill the cache during creation. On ContextRefreshedEvent,
    the ExtendedMetadata instance will acquire the SessionFactory from the
    ApplicationContext and assemble its metadata. The SessionFactory cannot
    be injected directly because several security objects depend on the
    metadata, but they themselves must be injected into the SessionFactory
    for proper functioning. To prevent this circular dependency, we do a
    form of lazy loading.
    </description>
  </bean>

  <!-- hibernateProperties moved to properties-*.xml -->

  <!-- Scope: private -->

  <!-- Used here to inject a value into the parent ome.model context
  which is available to all model objects. -->
  <bean class="ome.util.MapPut" lazy-init="false">
    <property name="map" ref="bridges"/>
    <property name="key" value="fieldBridges"/>
    <property name="object" ref="fullTextIndexer"/>
  </bean>

  <bean id="proxyHandler" class="ome.tools.hibernate.ProxyCleanupFilter$Interceptor">
    <description>
    Scope: private
    </description>
    <constructor-arg ref="sessionHandler"/>
    <constructor-arg ref="basicACLVoter"/>
  </bean>

  <bean id="sessionHandler" class="ome.tools.hibernate.SessionHandler">
    <description>
    Scope: private

    The session handler is used to handle sessions for stateful beans. A single
    session is opened for any new stateful session invocation, and will be closed
    once "close()" is invoked.
    </description>
    <constructor-arg ref="sessionFactory"/>
  </bean>

  <bean id="hibernateHandler" class="org.springframework.orm.hibernate3.HibernateInterceptor">
    <description>
    Scope: private
    </description>
    <property name="sessionFactory" ref="sessionFactory"/>
  </bean>

  <bean id="omeroSessionFactory" class="ome.tools.hibernate.SessionFactory">
    <constructor-arg ref="sessionFactory"/>
    <constructor-arg ref="simpleSqlAction"/><!-- Used for ome_nextval -->
  </bean>

  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <description>
    Scope: private
    Note:  many of the references for the sessionFactory are defined in
           security.xml
    </description>
    <property name="dataSource" ref="dataSource"/>
    <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
    <property name="hibernateProperties" ref="hibernateProperties"/>
    <property name="entityInterceptor" ref="omeroInterceptor"/>
    <property name="eventListeners" ref="eventListeners"/>
    <property name="filterDefinitions">
        <list>
            <ref bean="OneGroupSecurityFilter"/>
            <ref bean="AllGroupsSecurityFilter"/>
        </list>
    </property>
    <property name="lobHandler" ref="lobHandler"/>
  </bean>

  <!-- Note: it was necessary to overwrite org.hibernate.stat.ConcurrentStatisticsImpl to prevent memory issues -->
  <bean id="hibernateMBean" class="org.hibernate.jmx.StatisticsService">
   <property name="sessionFactory" ref="sessionFactory"/>
   <property name="statisticsEnabled" value="${omero.db.statistics}"/>
  </bean>

</beans>
