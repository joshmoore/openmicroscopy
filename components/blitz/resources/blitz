#!/bin/bash
# /etc/rc.d/init.d/blitz
# Startup script for OMERO.blitz
#
# chkconfig: 345 80 20
# description: blitz (Image database) is the server part of the OMERO software.
#       The blitz server can be used to connect to the OMERO database
#       from all the languages supported by the Ice framework (Zeroc.com)
#
# config: /opt/omero/etc
# Source function library.

#Centos
test -e /etc/init.d/functions && {
    . /etc/init.d/functions
    my_success(){
	success "$@"
	true
    }
    my_failure(){
	failure "$@"
	false
    }
}

#Mac
test -e /etc/rc.common && {
    # . /etc/rc.common # RESETS PATH
    my_success(){
	echo "$@"
	true
    }
    my_failure(){
	echo "$@"
	false
    }
}

#Ubuntu
test -e /lib/lsb/init-functions && {
    . /lib/lsb/init-functions
    my_success(){
	log_success_msg "$@"
	true
    }
    my_failure(){
	log_failure_msg "$@"
	false
    }
}

#Gentoo
test -e /etc/init.d/functions.sh && {
    . /etc/init.d/functions.sh
    my_success(){
	einfo "$@"
	true
    }
    my_failure(){
	ewarn "$@"
	false
    }
}

BLITZEXE=`readlink -f $0`
BLITZDIR=${BLITZDIR:-"`dirname $BLITZEXE`"}
BLITZTAC=${BLITZTAC:-"$BLITZDIR/blitz.tac"}
PID_FILE=${PID_FILE:-"$BLITZDIR/blitz.pid"}
LOG_FILE=${LOG_FILE:-"$BLITZDIR/blitz.log"}

# Use LOGGER="--syslog" for system logging
LOGGER=${LOGGER:-"--logfile $LOG_FILE"}

twistd_y() {
    twistd -y $BLITZTAC $LOGGER \
	--pidfile $PID_FILE \
	--rundir $BLITZDIR \
	--prefix blitz
}

trap "echo Continuing..." SIGINT

cd $BLITZDIR
while [ $# -gt 0 ]; do
   command=$1
   shift
  
   case "$command" in
     start)
       echo -n "Starting blitz: "
       twistd_y 
       if [ $? -eq 0 ]; then
      	   my_success "started"
       else 
	   my_failure "can't start via $BLITZTAC"
       fi
       ;;
     stop)
       echo -n "Stopping blitz: "
       if test -f $PID_FILE; then
	   kill `cat $PID_FILE`
	   my_success "stopped"
       else
	   my_failure "can't find $PID_FILE"
       fi
       echo
       ;;
     status)
           echo -n "OMERO.blitz: "
	   java -jar blitz.jar -s 
           rv=$?

           if [ ! -e $PID_FILE ]; then
               if [ $rv -eq 0 ]; then
                    my_failure "pid missing but running"
                else
                    my_failure "stopped"
               fi
           else 
                PID=`cat $PID_FILE`
                ps $PID | grep $PID 2>/dev/null 1>/dev/null || my_failure "process died"
               
                if [ $rv -eq 0 ]; then
                    my_success "running" 
                else
                    my_failure "pid found but no connection"
                fi
           fi
	;;
     restart)
      	   $BLITZEXE stop
	   $BLITZEXE start
       ;;
     tail) tail -f $LOG_FILE ;;
     less) less $LOG_FILE ;;
     grep) ps auxww | grep -E "(blitz|glacier)" ;;
     wait) 
         while ! $BLITZEXE status; do
             echo .
             sleep 1
         done
     ;;
     console) $BLITZEXE start tail stop ;;
     *)
       echo "Usage: $BLITZEXE {start|stop|status|restart}"
       false
   esac
done
